{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\actc\\\\store\\\\src\\\\components\\\\add\\\\form\\\\form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { CATEGORIES } from '../../../data/constants';\nimport { UserContext } from '../../providers/user-provider.component';\nimport './form.css';\nimport Input from '../../common/input/input.component';\nimport MultivalueInput from '../../common/multivalue-input/multivalue-input.component';\nimport Select from '../../common/select/select.component';\nimport Textarea from '../../common/textarea/textarea.component';\nimport useAddItem from '../../../hooks/menu/add-item.hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  var _userContext$user;\n\n  const userContext = useContext(UserContext);\n  const addItem = useAddItem();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"addForm\",\n    onSubmit: addItem.submit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Name\",\n      value: addItem.name.value,\n      onChange: addItem.name.onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      name: \"description\",\n      label: \"Description (Add your description here. Customers will be able to read it)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Image\",\n      name: \"image\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"price\",\n      label: \"Price\",\n      type: \"number\",\n      min: 0,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"category\",\n      label: \"Category\",\n      required: true,\n      children: CATEGORIES.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultivalueInput, {\n      label: \"Ingredients\",\n      value: addItem.ingredients.value,\n      onChange: newIngredients => addItem.ingredients.setValue(newIngredients)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addFormButtons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nemo-button\",\n        type: \"submit\",\n        disabled: ((_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.role) !== 'ADMIN',\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"t9JT4DtCrApv2cSgRQPDSoHgKeU=\", false, function () {\n  return [useAddItem];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useContext","CATEGORIES","UserContext","Input","MultivalueInput","Select","Textarea","useAddItem","Form","props","userContext","addItem","submit","name","value","onChange","map","item","ingredients","newIngredients","setValue","user","role"],"sources":["C:/Users/actc/store/src/components/add/form/form.component.jsx"],"sourcesContent":["import React, {  useContext } from 'react';\r\nimport { CATEGORIES } from '../../../data/constants';\r\nimport { UserContext } from '../../providers/user-provider.component';\r\nimport './form.css';\r\n\r\nimport Input from '../../common/input/input.component';\r\nimport MultivalueInput from '../../common/multivalue-input/multivalue-input.component';\r\nimport Select from '../../common/select/select.component';\r\nimport Textarea from '../../common/textarea/textarea.component';\r\nimport useAddItem from '../../../hooks/menu/add-item.hook';\r\n\r\nconst Form = (props) => {\r\n  const userContext = useContext(UserContext);\r\n  const addItem = useAddItem();\r\n\r\n  return (\r\n    <form className=\"addForm\" onSubmit={addItem.submit}>\r\n      <Input\r\n        label=\"Name\"\r\n        value={addItem.name.value}\r\n        onChange={addItem.name.onChange}\r\n        required\r\n      />\r\n      <Textarea\r\n        name=\"description\"\r\n        label=\"Description (Add your description here. Customers will be able to read it)\"\r\n      />\r\n      <Input\r\n        label=\"Image\"\r\n        name=\"image\"\r\n        required\r\n      />\r\n      <Input\r\n        name=\"price\"\r\n        label=\"Price\"\r\n        type=\"number\"\r\n        min={0}\r\n        required\r\n      />\r\n      <Select name=\"category\" label=\"Category\" required>\r\n        {CATEGORIES.map(item => {\r\n          return <option key={item} value={item}>{item}</option>;\r\n        })}\r\n      </Select>\r\n      <MultivalueInput\r\n        label=\"Ingredients\"\r\n        value={addItem.ingredients.value}\r\n        onChange={newIngredients => addItem.ingredients.setValue(newIngredients)}\r\n      />\r\n      <div className=\"addFormButtons\">\r\n        <button\r\n          className=\"nemo-button\"\r\n          type=\"submit\"\r\n          disabled={userContext.user?.role !== 'ADMIN'}\r\n        >\r\n          Create\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,OAAO,YAAP;AAEA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAAA;;EACtB,MAAMC,WAAW,GAAGV,UAAU,CAACE,WAAD,CAA9B;EACA,MAAMS,OAAO,GAAGJ,UAAU,EAA1B;EAEA,oBACE;IAAM,SAAS,EAAC,SAAhB;IAA0B,QAAQ,EAAEI,OAAO,CAACC,MAA5C;IAAA,wBACE,QAAC,KAAD;MACE,KAAK,EAAC,MADR;MAEE,KAAK,EAAED,OAAO,CAACE,IAAR,CAAaC,KAFtB;MAGE,QAAQ,EAAEH,OAAO,CAACE,IAAR,CAAaE,QAHzB;MAIE,QAAQ;IAJV;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,QAAD;MACE,IAAI,EAAC,aADP;MAEE,KAAK,EAAC;IAFR;MAAA;MAAA;MAAA;IAAA,QAPF,eAWE,QAAC,KAAD;MACE,KAAK,EAAC,OADR;MAEE,IAAI,EAAC,OAFP;MAGE,QAAQ;IAHV;MAAA;MAAA;MAAA;IAAA,QAXF,eAgBE,QAAC,KAAD;MACE,IAAI,EAAC,OADP;MAEE,KAAK,EAAC,OAFR;MAGE,IAAI,EAAC,QAHP;MAIE,GAAG,EAAE,CAJP;MAKE,QAAQ;IALV;MAAA;MAAA;MAAA;IAAA,QAhBF,eAuBE,QAAC,MAAD;MAAQ,IAAI,EAAC,UAAb;MAAwB,KAAK,EAAC,UAA9B;MAAyC,QAAQ,MAAjD;MAAA,UACGd,UAAU,CAACe,GAAX,CAAeC,IAAI,IAAI;QACtB,oBAAO;UAAmB,KAAK,EAAEA,IAA1B;UAAA,UAAiCA;QAAjC,GAAaA,IAAb;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFA;IADH;MAAA;MAAA;MAAA;IAAA,QAvBF,eA4BE,QAAC,eAAD;MACE,KAAK,EAAC,aADR;MAEE,KAAK,EAAEN,OAAO,CAACO,WAAR,CAAoBJ,KAF7B;MAGE,QAAQ,EAAEK,cAAc,IAAIR,OAAO,CAACO,WAAR,CAAoBE,QAApB,CAA6BD,cAA7B;IAH9B;MAAA;MAAA;MAAA;IAAA,QA5BF,eAiCE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QACE,SAAS,EAAC,aADZ;QAEE,IAAI,EAAC,QAFP;QAGE,QAAQ,EAAE,sBAAAT,WAAW,CAACW,IAAZ,wEAAkBC,IAAlB,MAA2B,OAHvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAjCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD,CAjDD;;GAAMd,I;UAEYD,U;;;KAFZC,I;AAmDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}