{"ast":null,"code":"/**\r\n * Fake Fetching of single item\r\n * @param {string} email\r\n * @param {string} password\r\n */\nconst loginUser = (email, password) => {\n  return fetch('https://6385ec80beaa6458266d44f1.mockapi.io/nemo/users').then(async response => {\n    const users = await response.json(); // Usually this code is on the BE side\n\n    return users.find(user => user.email === email && user.password === password) || null;\n  }).catch(error => {\n    console.error(error);\n    return null;\n  });\n};\n\nexport { loginUser };","map":{"version":3,"names":["loginUser","email","password","fetch","then","response","users","json","find","user","catch","error","console"],"sources":["C:/Users/actc/store/src/services/users.service.js"],"sourcesContent":["/**\r\n * Fake Fetching of single item\r\n * @param {string} email\r\n * @param {string} password\r\n */\r\nconst loginUser = (email, password) => {\r\n  return fetch('https://6385ec80beaa6458266d44f1.mockapi.io/nemo/users')\r\n    .then(async response => {\r\n      const users = await response.json();\r\n      // Usually this code is on the BE side\r\n      return users.find(user => user.email === email && user.password === password) || null;\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      return null;\r\n    });\r\n};\r\n\r\nexport {\r\n  loginUser\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACrC,OAAOC,KAAK,CAAC,wDAAD,CAAL,CACJC,IADI,CACC,MAAMC,QAAN,IAAkB;IACtB,MAAMC,KAAK,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAApB,CADsB,CAEtB;;IACA,OAAOD,KAAK,CAACE,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACR,KAAL,KAAeA,KAAf,IAAwBQ,IAAI,CAACP,QAAL,KAAkBA,QAA7D,KAA0E,IAAjF;EACD,CALI,EAMJQ,KANI,CAMEC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACA,OAAO,IAAP;EACD,CATI,CAAP;AAUD,CAXD;;AAaA,SACEX,SADF"},"metadata":{},"sourceType":"module"}