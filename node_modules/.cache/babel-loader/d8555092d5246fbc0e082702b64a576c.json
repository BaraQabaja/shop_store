{"ast":null,"code":"const reducer = (cart, action) => {\n  // This function updates the state\n  switch (action.type) {\n    case \"ADD_CART_ITEM\":\n      return [...cart, {\n        meal: action.meal,\n        quantity: 1\n      }];\n\n    case \"INCREMENT_CART_QUANTITY\":\n      {\n        let found = false;\n        const newCart = cart.map(cartItem => {\n          if (cartItem.meal.id === action.meal.id) {\n            found = true;\n            return { ...cartItem,\n              quantity: cartItem.quantity + 1\n            };\n          } else {\n            return cartItem;\n          }\n        });\n\n        if (!found) {\n          return [...cart, {\n            meal: action.meal,\n            quantity: 1\n          }];\n        }\n\n        return newCart;\n      }\n\n    case \"DECREMENT_CART_QUANTITY\":\n      {\n        const newCart = cart.map(item => {\n          return item.meal.id === action.meal.id ? { ...item,\n            quantity: item.quantity - 1\n          } : item;\n        });\n        return newCart.filter(item => item.quantity > 0);\n      }\n\n    case \"DELETE_CART_ITEM\":\n      {\n        return cart.filter(cartItem => cartItem.meal.id !== action.meal.id);\n      }\n\n    case \"CLEAR\":\n      return [];\n\n    case 'SET':\n      return action.cart;\n\n    default:\n      return cart;\n  }\n};\n\nexport { reducer };","map":{"version":3,"names":["reducer","cart","action","type","meal","quantity","found","newCart","map","cartItem","id","item","filter"],"sources":["C:/Users/actc/store/src/reducers/cart.js"],"sourcesContent":["const reducer = (cart, action) => {\r\n  // This function updates the state\r\n  switch (action.type) {\r\n    case \"ADD_CART_ITEM\":\r\n      return [...cart, { meal: action.meal, quantity: 1 }];\r\n    case \"INCREMENT_CART_QUANTITY\": {\r\n      let found = false;\r\n      const newCart = cart.map(cartItem => {\r\n        if (cartItem.meal.id === action.meal.id) {\r\n          found = true;\r\n          return { ...cartItem, quantity: cartItem.quantity + 1 };\r\n        } else {\r\n          return cartItem;\r\n        }\r\n      });\r\n\r\n      if (!found) {\r\n        return [...cart, { meal: action.meal, quantity: 1 }];\r\n      }\r\n      return newCart;\r\n    }\r\n    case \"DECREMENT_CART_QUANTITY\": {\r\n      const newCart = cart.map(item => {\r\n        return item.meal.id === action.meal.id\r\n          ? { ...item, quantity: item.quantity - 1 }\r\n          : item;\r\n      });\r\n\r\n      return newCart.filter(item => item.quantity > 0);\r\n    }\r\n    case \"DELETE_CART_ITEM\": {\r\n      return cart.filter(cartItem => cartItem.meal.id !== action.meal.id);\r\n    }\r\n    case \"CLEAR\":\r\n      return [];\r\n    case 'SET':\r\n      return action.cart;\r\n    default:\r\n      return cart;\r\n  }\r\n};\r\n\r\nexport {\r\n  reducer\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;EAChC;EACA,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE,OAAO,CAAC,GAAGF,IAAJ,EAAU;QAAEG,IAAI,EAAEF,MAAM,CAACE,IAAf;QAAqBC,QAAQ,EAAE;MAA/B,CAAV,CAAP;;IACF,KAAK,yBAAL;MAAgC;QAC9B,IAAIC,KAAK,GAAG,KAAZ;QACA,MAAMC,OAAO,GAAGN,IAAI,CAACO,GAAL,CAASC,QAAQ,IAAI;UACnC,IAAIA,QAAQ,CAACL,IAAT,CAAcM,EAAd,KAAqBR,MAAM,CAACE,IAAP,CAAYM,EAArC,EAAyC;YACvCJ,KAAK,GAAG,IAAR;YACA,OAAO,EAAE,GAAGG,QAAL;cAAeJ,QAAQ,EAAEI,QAAQ,CAACJ,QAAT,GAAoB;YAA7C,CAAP;UACD,CAHD,MAGO;YACL,OAAOI,QAAP;UACD;QACF,CAPe,CAAhB;;QASA,IAAI,CAACH,KAAL,EAAY;UACV,OAAO,CAAC,GAAGL,IAAJ,EAAU;YAAEG,IAAI,EAAEF,MAAM,CAACE,IAAf;YAAqBC,QAAQ,EAAE;UAA/B,CAAV,CAAP;QACD;;QACD,OAAOE,OAAP;MACD;;IACD,KAAK,yBAAL;MAAgC;QAC9B,MAAMA,OAAO,GAAGN,IAAI,CAACO,GAAL,CAASG,IAAI,IAAI;UAC/B,OAAOA,IAAI,CAACP,IAAL,CAAUM,EAAV,KAAiBR,MAAM,CAACE,IAAP,CAAYM,EAA7B,GACH,EAAE,GAAGC,IAAL;YAAWN,QAAQ,EAAEM,IAAI,CAACN,QAAL,GAAgB;UAArC,CADG,GAEHM,IAFJ;QAGD,CAJe,CAAhB;QAMA,OAAOJ,OAAO,CAACK,MAAR,CAAeD,IAAI,IAAIA,IAAI,CAACN,QAAL,GAAgB,CAAvC,CAAP;MACD;;IACD,KAAK,kBAAL;MAAyB;QACvB,OAAOJ,IAAI,CAACW,MAAL,CAAYH,QAAQ,IAAIA,QAAQ,CAACL,IAAT,CAAcM,EAAd,KAAqBR,MAAM,CAACE,IAAP,CAAYM,EAAzD,CAAP;MACD;;IACD,KAAK,OAAL;MACE,OAAO,EAAP;;IACF,KAAK,KAAL;MACE,OAAOR,MAAM,CAACD,IAAd;;IACF;MACE,OAAOA,IAAP;EApCJ;AAsCD,CAxCD;;AA0CA,SACED,OADF"},"metadata":{},"sourceType":"module"}