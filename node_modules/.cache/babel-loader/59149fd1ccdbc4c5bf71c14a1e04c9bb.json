{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\actc\\\\store\\\\src\\\\components\\\\common\\\\multivalue-input\\\\multivalue-input.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Input from '../input/input.component';\nimport './multivalue-input.css';\n/**\r\n * Renders an input component and a list of values.\r\n * @param {{\r\n *  label?: string;\r\n *  value: string[];\r\n *  onChange: (value: string[]) => void;\r\n * }} props \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultivalueInput = props => {\n  _s();\n\n  const [newItemValue, setNewItemValue] = useState('');\n\n  const addItem = () => {\n    if (newItemValue.trim().length > 0 && !props.value.includes(newItemValue)) {\n      const valueAfterAddition = [...props.value, newItemValue];\n      props.onChange(valueAfterAddition);\n      setNewItemValue('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multivalueInputWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: props.label,\n        value: newItemValue,\n        onChange: e => setNewItemValue(e.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            // e.stopPropagation();\n            e.preventDefault();\n            addItem();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nemo-button\",\n        type: \"button\",\n        onClick: addItem,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), props.value.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.value.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const valueAfterRemoval = props.value.filter(element => element !== item);\n              props.onChange(valueAfterRemoval);\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MultivalueInput, \"JxVaD28lwlc2/PSggqBSWR/yc9I=\");\n\n_c = MultivalueInput;\nexport default MultivalueInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultivalueInput\");","map":{"version":3,"names":["useState","Input","MultivalueInput","props","newItemValue","setNewItemValue","addItem","trim","length","value","includes","valueAfterAddition","onChange","label","e","target","key","preventDefault","map","item","valueAfterRemoval","filter","element"],"sources":["C:/Users/actc/store/src/components/common/multivalue-input/multivalue-input.component.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Input from '../input/input.component';\r\nimport './multivalue-input.css';\r\n\r\n/**\r\n * Renders an input component and a list of values.\r\n * @param {{\r\n *  label?: string;\r\n *  value: string[];\r\n *  onChange: (value: string[]) => void;\r\n * }} props \r\n */\r\nconst MultivalueInput = props => {\r\n  const [newItemValue, setNewItemValue] = useState('');\r\n\r\n  const addItem = () => {\r\n    if (newItemValue.trim().length > 0 && !props.value.includes(newItemValue)) {\r\n      const valueAfterAddition = [...props.value, newItemValue];\r\n      props.onChange(valueAfterAddition);\r\n      setNewItemValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"multivalueInputWrapper\">\r\n      <div className=\"controls\">\r\n        <Input\r\n          label={props.label}\r\n          value={newItemValue}\r\n          onChange={e => setNewItemValue(e.target.value)}\r\n          onKeyDown={e => {\r\n            if (e.key === \"Enter\") {\r\n              // e.stopPropagation();\r\n              e.preventDefault();\r\n              addItem();\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          className=\"nemo-button\"\r\n          type=\"button\"\r\n          onClick={addItem}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      {\r\n        props.value.length > 0 && (\r\n          <ul>\r\n            {props.value.map(item => {\r\n              return (\r\n                <li key={item} >\r\n                  <span>{item}</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      const valueAfterRemoval = props.value.filter(element => element !== item);\r\n                      props.onChange(valueAfterRemoval);\r\n                    }}\r\n                  >&times;</button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultivalueInput;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAO,wBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAAA;;EAC/B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMM,OAAO,GAAG,MAAM;IACpB,IAAIF,YAAY,CAACG,IAAb,GAAoBC,MAApB,GAA6B,CAA7B,IAAkC,CAACL,KAAK,CAACM,KAAN,CAAYC,QAAZ,CAAqBN,YAArB,CAAvC,EAA2E;MACzE,MAAMO,kBAAkB,GAAG,CAAC,GAAGR,KAAK,CAACM,KAAV,EAAiBL,YAAjB,CAA3B;MACAD,KAAK,CAACS,QAAN,CAAeD,kBAAf;MACAN,eAAe,CAAC,EAAD,CAAf;IACD;EACF,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,wBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE,QAAC,KAAD;QACE,KAAK,EAAEF,KAAK,CAACU,KADf;QAEE,KAAK,EAAET,YAFT;QAGE,QAAQ,EAAEU,CAAC,IAAIT,eAAe,CAACS,CAAC,CAACC,MAAF,CAASN,KAAV,CAHhC;QAIE,SAAS,EAAEK,CAAC,IAAI;UACd,IAAIA,CAAC,CAACE,GAAF,KAAU,OAAd,EAAuB;YACrB;YACAF,CAAC,CAACG,cAAF;YACAX,OAAO;UACR;QACF;MAVH;QAAA;QAAA;QAAA;MAAA,QADF,eAaE;QACE,SAAS,EAAC,aADZ;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEA,OAHX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAuBIH,KAAK,CAACM,KAAN,CAAYD,MAAZ,GAAqB,CAArB,iBACE;MAAA,UACGL,KAAK,CAACM,KAAN,CAAYS,GAAZ,CAAgBC,IAAI,IAAI;QACvB,oBACE;UAAA,wBACE;YAAA,UAAOA;UAAP;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YACE,IAAI,EAAC,QADP;YAEE,OAAO,EAAE,MAAM;cACb,MAAMC,iBAAiB,GAAGjB,KAAK,CAACM,KAAN,CAAYY,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,KAAKH,IAA1C,CAA1B;cACAhB,KAAK,CAACS,QAAN,CAAeQ,iBAAf;YACD,CALH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAASD,IAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAYD,CAbA;IADH;MAAA;MAAA;MAAA;IAAA,QAxBN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD,CAxDD;;GAAMjB,e;;KAAAA,e;AA0DN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}