{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\actc\\\\store\\\\src\\\\pages\\\\login\\\\login.page.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../components/providers/user-provider.component';\nimport Input from '../../components/common/input/input.component';\nimport { loginUser } from '../../services/users.service';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const userContext = useContext(UserContext);\n  useEffect(() => {\n    var _userContext$user;\n\n    // To check if the user is already logged in, send him to the view page\n    if ((_userContext$user = userContext.user) !== null && _userContext$user !== void 0 && _userContext$user.id) {\n      navigate('/view', {\n        replace: true\n      });\n    }\n  }, []);\n  /**\r\n  * Handler function for the form onSubmit event.\r\n  * @param {React.FormEvent<HTMLFormElement>} e Event object.\r\n  */\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const email = e.target.email.value.trim();\n    const password = e.target.password.value.trim();\n\n    if (email && password) {\n      const user = await loginUser(email, password);\n      console.log(user); // If Successful login, go to view page\n\n      if (user) {\n        userContext.setUser(user);\n        navigate('/view', {\n          replace: true\n        });\n      } else {\n        alert(\"Email or Password are not correct! Please try again.\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"ahmad@example.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nemo-button\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"dCIqn3Ihs9iI8ZNT/4PlctEVZHk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useEffect","useContext","useNavigate","UserContext","Input","loginUser","LoginPage","props","navigate","userContext","user","id","replace","handleLogin","e","preventDefault","email","target","value","trim","password","console","log","setUser","alert"],"sources":["C:/Users/actc/store/src/pages/login/login.page.jsx"],"sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UserContext } from '../../components/providers/user-provider.component';\r\nimport Input from '../../components/common/input/input.component';\r\nimport { loginUser } from '../../services/users.service';\r\nimport './login.css';\r\n\r\nconst LoginPage = (props) => {\r\n  const navigate = useNavigate();\r\n  const userContext = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // To check if the user is already logged in, send him to the view page\r\n    if (userContext.user?.id) {\r\n      navigate('/view', { replace: true });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n * Handler function for the form onSubmit event.\r\n * @param {React.FormEvent<HTMLFormElement>} e Event object.\r\n */\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const email = e.target.email.value.trim();\r\n    const password = e.target.password.value.trim();\r\n\r\n    if (email && password) {\r\n      const user = await loginUser(email, password);\r\n      console.log(user);\r\n\r\n      // If Successful login, go to view page\r\n      if (user) {\r\n        userContext.setUser(user);\r\n        navigate('/view', { replace: true });\r\n      } else {\r\n        alert(\"Email or Password are not correct! Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form onSubmit={handleLogin}>\r\n        <h1>Welcome Back</h1>\r\n        <Input\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"ahmad@example.com\"\r\n          required\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          required\r\n        />\r\n        <div>\r\n          <button className=\"nemo-button\" type=\"submit\">Login</button>\r\n        </div>\r\n      </form >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default LoginPage;;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,oDAA5B;AACA,OAAOC,KAAP,MAAkB,+CAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,WAAW,GAAGR,UAAU,CAACE,WAAD,CAA9B;EAEAH,SAAS,CAAC,MAAM;IAAA;;IACd;IACA,yBAAIS,WAAW,CAACC,IAAhB,8CAAI,kBAAkBC,EAAtB,EAA0B;MACxBH,QAAQ,CAAC,OAAD,EAAU;QAAEI,OAAO,EAAE;MAAX,CAAV,CAAR;IACD;EACF,CALQ,EAKN,EALM,CAAT;EAOA;AACF;AACA;AACA;;EACE,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;IAC/BA,CAAC,CAACC,cAAF;IACA,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAT,CAAeE,KAAf,CAAqBC,IAArB,EAAd;IACA,MAAMC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASG,QAAT,CAAkBF,KAAlB,CAAwBC,IAAxB,EAAjB;;IAEA,IAAIH,KAAK,IAAII,QAAb,EAAuB;MACrB,MAAMV,IAAI,GAAG,MAAML,SAAS,CAACW,KAAD,EAAQI,QAAR,CAA5B;MACAC,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EAFqB,CAIrB;;MACA,IAAIA,IAAJ,EAAU;QACRD,WAAW,CAACc,OAAZ,CAAoBb,IAApB;QACAF,QAAQ,CAAC,OAAD,EAAU;UAAEI,OAAO,EAAE;QAAX,CAAV,CAAR;MACD,CAHD,MAGO;QACLY,KAAK,CAAC,sDAAD,CAAL;MACD;IACF;EACF,CAjBD;;EAmBA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE;MAAM,QAAQ,EAAEX,WAAhB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,KAAK,EAAC,OADR;QAEE,IAAI,EAAC,OAFP;QAGE,IAAI,EAAC,OAHP;QAIE,WAAW,EAAC,mBAJd;QAKE,QAAQ;MALV;QAAA;QAAA;QAAA;MAAA,QAFF,eASE,QAAC,KAAD;QACE,KAAK,EAAC,UADR;QAEE,IAAI,EAAC,UAFP;QAGE,IAAI,EAAC,UAHP;QAIE,QAAQ;MAJV;QAAA;QAAA;QAAA;MAAA,QATF,eAeE;QAAA,uBACE;UAAQ,SAAS,EAAC,aAAlB;UAAgC,IAAI,EAAC,QAArC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAzDD;;GAAMP,S;UACaJ,W;;;KADbI,S;AA2DN,eAAeA,SAAf;AAAyB"},"metadata":{},"sourceType":"module"}