{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createItem } from '../../services/items.service';\n\nconst useAddItem = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const navigate = useNavigate();\n  /**\r\n  * Handler function for the form onSubmit event.\r\n  * @param {React.FormEvent<HTMLFormElement>} e Event object.\r\n  */\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const description = e.target.description.value;\n    const image = e.target.image.value;\n    const price = Number(e.target.price.value);\n    const category = e.target.category.value;\n    const menuItem = {\n      // id: Date.now(),\n      name: name,\n      image,\n      description: description,\n      price: price.toString(),\n      category: category,\n      ingredients: ingredients\n    };\n    const res = await createItem(menuItem);\n\n    if (res) {\n      alert(\"Item added successfully\");\n      navigate('/view');\n    } else {\n      alert(\"Error adding the item!\");\n    }\n  };\n  /**\r\n   * Handles on change events on the name field.\r\n   * @param {React.ChangeEvent<HTMLInputElement>} e On change event object.\r\n   */\n\n\n  const onNameChange = e => {\n    let value = e.target.value;\n\n    if (value.includes('.')) {\n      alert('. character is not allowed');\n      value = value.replace('.', '');\n    }\n\n    if (/find/ig.test(value)) {\n      value = value.replace(/find/ig, 'fry');\n    }\n\n    setName(value);\n  };\n\n  return {\n    name: {\n      value: name,\n      onChange: onNameChange\n    },\n    ingredients: {\n      value: ingredients,\n      setValue: setIngredients\n    },\n    submit: submitHandler\n  };\n};\n\n_s(useAddItem, \"dP99TXsKxkIF2rqROVE0h2h6QpE=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useAddItem;","map":{"version":3,"names":["useState","useNavigate","createItem","useAddItem","name","setName","ingredients","setIngredients","navigate","submitHandler","e","preventDefault","description","target","value","image","price","Number","category","menuItem","toString","res","alert","onNameChange","includes","replace","test","onChange","setValue","submit"],"sources":["C:/Users/actc/store/src/hooks/menu/add-item.hook.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createItem } from '../../services/items.service';\r\n\r\nconst useAddItem = () => {\r\n  const [name, setName] = useState('');\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n * Handler function for the form onSubmit event.\r\n * @param {React.FormEvent<HTMLFormElement>} e Event object.\r\n */\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n\r\n    const description = e.target.description.value;\r\n    const image = e.target.image.value;\r\n    const price = Number(e.target.price.value);\r\n    const category = e.target.category.value;\r\n\r\n    const menuItem = {\r\n      // id: Date.now(),\r\n      name: name,\r\n      image,\r\n      description: description,\r\n      price: price.toString(),\r\n      category: category,\r\n      ingredients: ingredients\r\n    };\r\n\r\n    const res = await createItem(menuItem);\r\n\r\n    if (res) {\r\n      alert(\"Item added successfully\");\r\n      navigate('/view');\r\n    } else {\r\n      alert(\"Error adding the item!\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles on change events on the name field.\r\n   * @param {React.ChangeEvent<HTMLInputElement>} e On change event object.\r\n   */\r\n  const onNameChange = (e) => {\r\n    let value = e.target.value;\r\n\r\n    if (value.includes('.')) {\r\n      alert('. character is not allowed');\r\n      value = value.replace('.', '');\r\n    }\r\n\r\n    if (/find/ig.test(value)) {\r\n      value = value.replace(/find/ig, 'fry');\r\n    }\r\n\r\n    setName(value);\r\n  };\r\n\r\n  return {\r\n    name: {\r\n      value: name,\r\n      onChange: onNameChange\r\n    },\r\n    ingredients: {\r\n      value: ingredients,\r\n      setValue: setIngredients\r\n    },\r\n    submit: submitHandler\r\n  };\r\n};\r\n\r\nexport default useAddItem;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAMQ,QAAQ,GAAGP,WAAW,EAA5B;EAEA;AACF;AACA;AACA;;EACE,MAAMQ,aAAa,GAAG,MAAMC,CAAN,IAAW;IAC/BA,CAAC,CAACC,cAAF;IAEA,MAAMC,WAAW,GAAGF,CAAC,CAACG,MAAF,CAASD,WAAT,CAAqBE,KAAzC;IACA,MAAMC,KAAK,GAAGL,CAAC,CAACG,MAAF,CAASE,KAAT,CAAeD,KAA7B;IACA,MAAME,KAAK,GAAGC,MAAM,CAACP,CAAC,CAACG,MAAF,CAASG,KAAT,CAAeF,KAAhB,CAApB;IACA,MAAMI,QAAQ,GAAGR,CAAC,CAACG,MAAF,CAASK,QAAT,CAAkBJ,KAAnC;IAEA,MAAMK,QAAQ,GAAG;MACf;MACAf,IAAI,EAAEA,IAFS;MAGfW,KAHe;MAIfH,WAAW,EAAEA,WAJE;MAKfI,KAAK,EAAEA,KAAK,CAACI,QAAN,EALQ;MAMfF,QAAQ,EAAEA,QANK;MAOfZ,WAAW,EAAEA;IAPE,CAAjB;IAUA,MAAMe,GAAG,GAAG,MAAMnB,UAAU,CAACiB,QAAD,CAA5B;;IAEA,IAAIE,GAAJ,EAAS;MACPC,KAAK,CAAC,yBAAD,CAAL;MACAd,QAAQ,CAAC,OAAD,CAAR;IACD,CAHD,MAGO;MACLc,KAAK,CAAC,wBAAD,CAAL;IACD;EACF,CA1BD;EA4BA;AACF;AACA;AACA;;;EACE,MAAMC,YAAY,GAAIb,CAAD,IAAO;IAC1B,IAAII,KAAK,GAAGJ,CAAC,CAACG,MAAF,CAASC,KAArB;;IAEA,IAAIA,KAAK,CAACU,QAAN,CAAe,GAAf,CAAJ,EAAyB;MACvBF,KAAK,CAAC,4BAAD,CAAL;MACAR,KAAK,GAAGA,KAAK,CAACW,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAR;IACD;;IAED,IAAI,SAASC,IAAT,CAAcZ,KAAd,CAAJ,EAA0B;MACxBA,KAAK,GAAGA,KAAK,CAACW,OAAN,CAAc,QAAd,EAAwB,KAAxB,CAAR;IACD;;IAEDpB,OAAO,CAACS,KAAD,CAAP;EACD,CAbD;;EAeA,OAAO;IACLV,IAAI,EAAE;MACJU,KAAK,EAAEV,IADH;MAEJuB,QAAQ,EAAEJ;IAFN,CADD;IAKLjB,WAAW,EAAE;MACXQ,KAAK,EAAER,WADI;MAEXsB,QAAQ,EAAErB;IAFC,CALR;IASLsB,MAAM,EAAEpB;EATH,CAAP;AAWD,CAnED;;GAAMN,U;UAGaF,W;;;AAkEnB,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}