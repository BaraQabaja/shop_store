{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\actc\\\\store\\\\src\\\\components\\\\view\\\\filter-bar\\\\filter-bar.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './filter-bar.css';\nimport Input from '../../common/input/input.component';\nimport { CATEGORIES } from '../../../data/constants';\nimport CheckBox from '../../common/toggle-bullets/check-box.component';\nimport useParams from '../../../hooks/params.hook';\n/**\r\n * Renders a filters bar.\r\n * @param {{ \r\n *  isTourist: boolean;\r\n *  toggleIsTourist: () => void;\r\n * }} props\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterBar = props => {\n  _s();\n\n  const {\n    myParams,\n    setParam\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"search\",\n      label: \"Search for Item\",\n      value: myParams.searchTermsFromURL || '',\n      onChange: e => setParam('searchTerms', e.target.value),\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories\",\n      children: CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(CheckBox, {\n        label: cat,\n        checked: myParams.categoriesFromURL.includes(cat),\n        onChange: e => {\n          const updated = e.target.checked ? [...myParams.categoriesFromURL, cat] : myParams.categoriesFromURL.filter(category => category !== cat);\n          setParam('category', updated);\n        }\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tourists\",\n      children: /*#__PURE__*/_jsxDEV(CheckBox, {\n        label: \"Tourist\",\n        checked: props.isTourist,\n        onChange: props.toggleIsTourist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterBar, \"Ek643qgR/+b0gJOwiUQ1nLd8gLw=\", false, function () {\n  return [useParams];\n});\n\n_c = FilterBar;\nexport default FilterBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["React","Input","CATEGORIES","CheckBox","useParams","FilterBar","props","myParams","setParam","searchTermsFromURL","e","target","value","map","cat","categoriesFromURL","includes","updated","checked","filter","category","isTourist","toggleIsTourist"],"sources":["C:/Users/actc/store/src/components/view/filter-bar/filter-bar.component.jsx"],"sourcesContent":["import React from 'react';\r\nimport './filter-bar.css';\r\nimport Input from '../../common/input/input.component';\r\nimport { CATEGORIES } from '../../../data/constants';\r\nimport CheckBox from '../../common/toggle-bullets/check-box.component';\r\nimport useParams from '../../../hooks/params.hook';\r\n\r\n/**\r\n * Renders a filters bar.\r\n * @param {{ \r\n *  isTourist: boolean;\r\n *  toggleIsTourist: () => void;\r\n * }} props\r\n */\r\nconst FilterBar = (props) => {\r\n  const { myParams, setParam } = useParams();\r\n\r\n  return (\r\n    <div className=\"filter-bar\">\r\n      <Input\r\n        type=\"search\"\r\n        label=\"Search for Item\"\r\n        value={myParams.searchTermsFromURL || ''}\r\n        onChange={e => setParam('searchTerms', e.target.value)}\r\n        placeholder=\"Search\"\r\n      />\r\n      <div className=\"categories\">\r\n        {CATEGORIES.map(cat => (\r\n          <CheckBox\r\n            key={cat}\r\n            label={cat}\r\n            checked={myParams.categoriesFromURL.includes(cat)}\r\n            onChange={e => {\r\n              const updated = e.target.checked\r\n                ? [...myParams.categoriesFromURL, cat]\r\n                : myParams.categoriesFromURL.filter(category => category !== cat);\r\n\r\n              setParam('category', updated);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"tourists\">\r\n        <CheckBox label=\"Tourist\" checked={props.isTourist} onChange={props.toggleIsTourist} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBar;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAyBJ,SAAS,EAAxC;EAEA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE,QAAC,KAAD;MACE,IAAI,EAAC,QADP;MAEE,KAAK,EAAC,iBAFR;MAGE,KAAK,EAAEG,QAAQ,CAACE,kBAAT,IAA+B,EAHxC;MAIE,QAAQ,EAAEC,CAAC,IAAIF,QAAQ,CAAC,aAAD,EAAgBE,CAAC,CAACC,MAAF,CAASC,KAAzB,CAJzB;MAKE,WAAW,EAAC;IALd;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAK,SAAS,EAAC,YAAf;MAAA,UACGV,UAAU,CAACW,GAAX,CAAeC,GAAG,iBACjB,QAAC,QAAD;QAEE,KAAK,EAAEA,GAFT;QAGE,OAAO,EAAEP,QAAQ,CAACQ,iBAAT,CAA2BC,QAA3B,CAAoCF,GAApC,CAHX;QAIE,QAAQ,EAAEJ,CAAC,IAAI;UACb,MAAMO,OAAO,GAAGP,CAAC,CAACC,MAAF,CAASO,OAAT,GACZ,CAAC,GAAGX,QAAQ,CAACQ,iBAAb,EAAgCD,GAAhC,CADY,GAEZP,QAAQ,CAACQ,iBAAT,CAA2BI,MAA3B,CAAkCC,QAAQ,IAAIA,QAAQ,KAAKN,GAA3D,CAFJ;UAIAN,QAAQ,CAAC,UAAD,EAAaS,OAAb,CAAR;QACD;MAVH,GACOH,GADP;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QARF,eAwBE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,QAAD;QAAU,KAAK,EAAC,SAAhB;QAA0B,OAAO,EAAER,KAAK,CAACe,SAAzC;QAAoD,QAAQ,EAAEf,KAAK,CAACgB;MAApE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAxBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAjCD;;GAAMjB,S;UAC2BD,S;;;KAD3BC,S;AAmCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}